Index: app/src/main/java/com/comp3350_group10/bookstore/persistence/hsqldb/BookDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * HSQLDB Book Database\r\n */\r\n\r\npackage com.comp3350_group10.bookstore.persistence.hsqldb;\r\nimport com.comp3350_group10.bookstore.objects.Book;\r\nimport com.comp3350_group10.bookstore.persistence.IBook;\r\nimport com.comp3350_group10.bookstore.persistence.IBookDatabase;\r\n\r\nimport java.util.ArrayList;\r\nimport java.sql.Connection;\r\nimport java.sql.DriverManager;\r\nimport java.sql.ResultSet;\r\nimport java.sql.Statement;\r\nimport java.sql.SQLException;\r\nimport java.sql.PreparedStatement;\r\nimport java.util.List;\r\n\r\n\r\npublic class BookDatabase implements IBookDatabase {\r\n\r\n\r\n    private List<IBook> bookList;\r\n\r\n    private final String dbPath;\r\n\r\n    public BookDatabase(final String dbPath){\r\n        this.dbPath = dbPath;\r\n    }\r\n\r\n    private Connection connection() throws SQLException{\r\n        return DriverManager.getConnection(\"jdbc:hsqldb:file:\"+ dbPath+ \";shutdown=true\", \"SA\", \"\");\r\n    }\r\n\r\n    private Book createBook(final ResultSet rs) throws SQLException{\r\n        final String bookName = rs.getString(\"bookName\");\r\n        final String isbn = rs.getString(\"isbn\");\r\n        final int quantity = rs.getInt(\"quantity\");\r\n        final int price = rs.getInt(\"price\");\r\n        final String date = rs.getString(\"date\");\r\n        final String author = rs.getString(\"author\");\r\n        final String genre = rs.getString(\"genre\");\r\n        final int reserve = rs.getInt(\"reserve\");\r\n        final int imageReference = rs.getInt(\"image\");\r\n\r\n        return new Book(bookName, isbn, quantity, price, date, author, genre, reserve, imageReference);\r\n    }\r\n\r\n\r\n    /**\r\n     * findBooks: Finds and returns the book objects based on their book ISBN\r\n     * @param searchTerm\r\n     * @return\r\n     */\r\n    public List<IBook> findBook(String searchTerm) throws ClassNotFoundException {\r\n\r\n        //Lists which contains book objects related to specific search terms\r\n        List<IBook> findByISBN = findByISBN(searchTerm);\r\n        List<IBook> findByAuthor = findByAuthor(searchTerm);\r\n        List<IBook> findByTitle = findByTitle(searchTerm);\r\n\r\n        //Filtering by removing duplicates and adding them all into a single list which has elements of the search term\r\n        List<IBook> bookResult = new ArrayList<>();\r\n\r\n        for(IBook book: findByISBN){\r\n            if(!bookResult.contains(book)){\r\n                bookResult.add(book);\r\n            }\r\n        }\r\n        for(IBook book: findByAuthor){\r\n            if(!bookResult.contains(book)){\r\n                bookResult.add(book);\r\n            }\r\n        }\r\n        for(IBook book: findByTitle){\r\n            if(!bookResult.contains(book)){\r\n                bookResult.add(book);\r\n            }\r\n        }\r\n\r\n        return bookResult;\r\n    }\r\n\r\n    /**\r\n     * findByISBN: Finds books from our bookList by ISBN\r\n     * @param isbn\r\n     */\r\n    private List<IBook> findByISBN(String isbn) throws ClassNotFoundException {\r\n        List<IBook> bookIsbn = getBooks();\r\n        if(isbn != null){\r\n            //Going through all the bookList\r\n            for(IBook book: bookList){\r\n                //If the string inputted matches any of the strings in the our bookList, then add that to our local list\r\n                if(book.getBookIsbn().startsWith(isbn)){\r\n                    bookIsbn.add(book);\r\n                }\r\n            }\r\n        }\r\n        return bookIsbn;\r\n    }\r\n\r\n    /**\r\n     * findByAuthor: Finds books from our bookList by author\r\n     * @param author\r\n     */\r\n    private List<IBook> findByAuthor(String author) throws ClassNotFoundException {\r\n        List<IBook> bookAuthor = getBooks();\r\n        String[] split;\r\n        if(author != null){\r\n            //Going through all the bookList\r\n            for(IBook book: bookList) {\r\n                //***CHANGED***:\r\n                // now instead of pulling whole string and try to match with the search term,\r\n                // we split the term by delimeters and try to match each search term with each data term\r\n                //e.g. \"J. K. Rowling\" now becomes \"J\", \"K\", \"Rowling\" so if we search \"Rowling\" it now matches\r\n                split = book.getBookAuthor().toLowerCase().split(\"[-. ,:]+\");\r\n                for(String splitTerm: split){\r\n                    //If the string inputted matches any of the terms in the book's author name, then add that book to our return list\r\n                    if (splitTerm.startsWith(author)) {\r\n                        bookAuthor.add(book);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return bookAuthor;\r\n    }\r\n\r\n    /**\r\n     * findByTitle: Finds books from our bookList by title\r\n     * @param title\r\n     */\r\n    private List<IBook> findByTitle(String title) throws ClassNotFoundException {\r\n        List<IBook> bookTitle = getBooks();\r\n        String[] split;\r\n\r\n        if(title != null){\r\n            //Going through all the bookList\r\n            for(IBook book: bookList) {\r\n                //***CHANGED***: see findByAuthor for detail\r\n                split = book.getBookName().toLowerCase().split(\"[-. ,:]+\");\r\n                for(String splitTerm: split){\r\n                    //If the string inputted matches any of the terms in the book titles, then add the book to our return list\r\n                    if (splitTerm.startsWith(title)) {\r\n                        bookTitle.add(book);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return bookTitle;\r\n    }\r\n\r\n\r\n    @Override\r\n    public List<IBook> getBooks() throws ClassNotFoundException {\r\n        final List<IBook> books = new ArrayList<>();\r\n        Class.forName(\"org.hsqldb.jdbcDriver\");\r\n\r\n        try (final Connection conn = connection()){\r\n            final Statement stmt = conn.createStatement();\r\n            final ResultSet rtst = stmt.executeQuery(\"SELECT * FROM BOOKS\");\r\n\r\n            while(rtst.next()){\r\n                final Book book = createBook(rtst);\r\n                books.add(book);\r\n            }\r\n\r\n            rtst.close();\r\n            stmt.close();\r\n        }\r\n\r\n        catch(final SQLException e){\r\n            throw new PersistenceException(e);\r\n        }\r\n        return books;\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    public IBook insertBook(IBook book) throws ClassNotFoundException {\r\n        Class.forName(\"org.hsqldb.jdbcDriver\");\r\n\r\n        try(final Connection conn = connection()) {\r\n            final PreparedStatement pstmt = conn.prepareStatement(\"INSERT INTO BOOKS VALUES(?,?,?,?,?,?,?,?)\");\r\n            pstmt.setString(1, book.getBookName());\r\n            pstmt.setString(2, book.getBookIsbn());\r\n            pstmt.setInt(3, book.getStock());\r\n            pstmt.setInt(4, book.getPrice());\r\n            pstmt.setString(5, book.getDate());\r\n            pstmt.setString(6, book.getBookAuthor());\r\n            pstmt.setString(7, book.getGenre());\r\n            pstmt.setInt(8, book.getReserve());\r\n            pstmt.setInt(9, book.getImage());\r\n            pstmt.executeUpdate();\r\n\r\n            return book;\r\n        }\r\n        catch(final SQLException e){\r\n            throw new PersistenceException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void updateBook(IBook book) throws ClassNotFoundException {\r\n        Class.forName(\"org.hsqldb.jdbcDriver\");\r\n\r\n        try (final Connection conn = connection()){\r\n            final PreparedStatement pstmt = conn.prepareStatement(\"UPDATE BOOKS SET quantity=?,price=?, reserve=? WHERE isbn = ?\");\r\n            pstmt.setInt(1, book.getStock());\r\n            pstmt.setInt(2, book.getPrice());\r\n            pstmt.setInt(3, book.getReserve());\r\n            pstmt.setString(4, book.getBookIsbn());\r\n            pstmt.executeUpdate();\r\n        }\r\n        catch(final SQLException e){\r\n            throw new PersistenceException(e);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void deleteBook(IBook book) throws ClassNotFoundException {\r\n        Class.forName(\"org.hsqldb.jdbcDriver\");\r\n\r\n        try(final Connection conn = connection()){\r\n            final PreparedStatement pstmt = conn.prepareStatement(\"DELETE FROM BOOKS WHERE isbn=?\");\r\n            pstmt.setString(1, book.getBookIsbn());\r\n            pstmt.executeUpdate();\r\n        }\r\n        catch(final SQLException e){\r\n            throw new PersistenceException(e);\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/persistence/hsqldb/BookDatabase.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/persistence/hsqldb/BookDatabase.java	(date 1616547770279)
@@ -3,10 +3,16 @@
  */
 
 package com.comp3350_group10.bookstore.persistence.hsqldb;
+import android.content.Context;
+import android.content.res.AssetManager;
+
 import com.comp3350_group10.bookstore.objects.Book;
 import com.comp3350_group10.bookstore.persistence.IBook;
 import com.comp3350_group10.bookstore.persistence.IBookDatabase;
+import com.comp3350_group10.bookstore.presentation.MainActivity;
 
+import java.io.IOException;
+import java.io.InputStream;
 import java.util.ArrayList;
 import java.sql.Connection;
 import java.sql.DriverManager;
@@ -15,21 +21,30 @@
 import java.sql.SQLException;
 import java.sql.PreparedStatement;
 import java.util.List;
+import java.util.Scanner;
 
 
 public class BookDatabase implements IBookDatabase {
 
-
     private List<IBook> bookList;
 
     private final String dbPath;
 
-    public BookDatabase(final String dbPath){
+    public BookDatabase(final String dbPath, Context context){
+        try
+        {
+
+            System.out.println(context.getAssets().list("db")[0]);
+
+        } catch (IOException e)
+        {
+            e.printStackTrace();
+        }
         this.dbPath = dbPath;
     }
 
     private Connection connection() throws SQLException{
-        return DriverManager.getConnection("jdbc:hsqldb:file:"+ dbPath+ ";shutdown=true", "SA", "");
+        return DriverManager.getConnection("jdbc:hsqldb:mem:newdb;shutdown=true", "SA", "");
     }
 
     private Book createBook(final ResultSet rs) throws SQLException{
@@ -52,7 +67,7 @@
      * @param searchTerm
      * @return
      */
-    public List<IBook> findBook(String searchTerm) throws ClassNotFoundException {
+    public List<IBook> findBook(String searchTerm) {
 
         //Lists which contains book objects related to specific search terms
         List<IBook> findByISBN = findByISBN(searchTerm);
@@ -85,7 +100,7 @@
      * findByISBN: Finds books from our bookList by ISBN
      * @param isbn
      */
-    private List<IBook> findByISBN(String isbn) throws ClassNotFoundException {
+    private List<IBook> findByISBN(String isbn) {
         List<IBook> bookIsbn = getBooks();
         if(isbn != null){
             //Going through all the bookList
@@ -103,7 +118,7 @@
      * findByAuthor: Finds books from our bookList by author
      * @param author
      */
-    private List<IBook> findByAuthor(String author) throws ClassNotFoundException {
+    private List<IBook> findByAuthor(String author) {
         List<IBook> bookAuthor = getBooks();
         String[] split;
         if(author != null){
@@ -129,7 +144,7 @@
      * findByTitle: Finds books from our bookList by title
      * @param title
      */
-    private List<IBook> findByTitle(String title) throws ClassNotFoundException {
+    private List<IBook> findByTitle(String title) {
         List<IBook> bookTitle = getBooks();
         String[] split;
 
@@ -151,9 +166,9 @@
 
 
     @Override
-    public List<IBook> getBooks() throws ClassNotFoundException {
+    public List<IBook> getBooks() {
         final List<IBook> books = new ArrayList<>();
-        Class.forName("org.hsqldb.jdbcDriver");
+        //Class.forName("org.hsqldb.jdbcDriver");
 
         try (final Connection conn = connection()){
             final Statement stmt = conn.createStatement();
@@ -177,8 +192,8 @@
 
 
     @Override
-    public IBook insertBook(IBook book) throws ClassNotFoundException {
-        Class.forName("org.hsqldb.jdbcDriver");
+    public IBook insertBook(IBook book) {
+        //Class.forName("org.hsqldb.jdbcDriver");
 
         try(final Connection conn = connection()) {
             final PreparedStatement pstmt = conn.prepareStatement("INSERT INTO BOOKS VALUES(?,?,?,?,?,?,?,?)");
@@ -201,8 +216,8 @@
     }
 
     @Override
-    public void updateBook(IBook book) throws ClassNotFoundException {
-        Class.forName("org.hsqldb.jdbcDriver");
+    public void updateBook(IBook book) {
+        //Class.forName("org.hsqldb.jdbcDriver");
 
         try (final Connection conn = connection()){
             final PreparedStatement pstmt = conn.prepareStatement("UPDATE BOOKS SET quantity=?,price=?, reserve=? WHERE isbn = ?");
@@ -218,8 +233,8 @@
     }
 
     @Override
-    public void deleteBook(IBook book) throws ClassNotFoundException {
-        Class.forName("org.hsqldb.jdbcDriver");
+    public void deleteBook(IBook book) {
+        //Class.forName("org.hsqldb.jdbcDriver");
 
         try(final Connection conn = connection()){
             final PreparedStatement pstmt = conn.prepareStatement("DELETE FROM BOOKS WHERE isbn=?");
Index: app/src/main/java/com/comp3350_group10/bookstore/presentation/UserSettingActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.presentation;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.View;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport com.comp3350_group10.bookstore.R;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.ButtonFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.IButtonFunctions;\r\n\r\npublic class UserSettingActivity extends AppCompatActivity {\r\n    private EditText oldPassword;\r\n    private EditText newPassword;\r\n    private EditText confirmNewPassword;\r\n    private IButtonFunctions logic;\r\n    public static TextView errorMessage;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        logic = new ButtonFunctions();\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.settings_activity);\r\n\r\n        errorMessage = findViewById(R.id.settingErrorMessage);\r\n        oldPassword = findViewById(R.id.oldPassword);\r\n        newPassword = findViewById(R.id.newPassword);\r\n        confirmNewPassword = findViewById(R.id.confirmNewPassword);\r\n    }\r\n\r\n\r\n\r\n    public void changePwOnClick(View v){\r\n        logic.ChangePasswordPressed(oldPassword.getText().toString(), newPassword.getText().toString(), confirmNewPassword.getText().toString());\r\n        System.out.println(\"Change pw clicked: \"+ oldPassword.getText().toString() +\" \" + newPassword.getText().toString() +\" \" + confirmNewPassword.getText().toString());\r\n    }\r\n\r\n\r\n    public void logoutOnClick(View v){\r\n        logic.LogoutButtonPressed();\r\n        System.out.println(\"logging out now...\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/presentation/UserSettingActivity.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/presentation/UserSettingActivity.java	(date 1616547081304)
@@ -20,7 +20,7 @@
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-        logic = new ButtonFunctions();
+        logic = new ButtonFunctions(getBaseContext());
         super.onCreate(savedInstanceState);
         setContentView(R.layout.settings_activity);
 
Index: app/src/main/java/com/comp3350_group10/bookstore/business/UI_Handler/ButtonFunctions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.business.UI_Handler;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.widget.ImageView;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\n\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.BookDataHandler;\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.IBookDataHandler;\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.IUserDataHandler;\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.UserDataHandler;\r\nimport com.comp3350_group10.bookstore.persistence.IBook;\r\nimport com.comp3350_group10.bookstore.presentation.BookDetailsActivity;\r\nimport com.comp3350_group10.bookstore.presentation.MainActivity;\r\nimport com.comp3350_group10.bookstore.presentation.ScreenSize;\r\nimport com.comp3350_group10.bookstore.presentation.UserSettingActivity;\r\nimport com.comp3350_group10.bookstore.presentation.login.LoginActivity;\r\n\r\nimport java.text.DecimalFormat;\r\nimport java.util.List;\r\n\r\npublic class ButtonFunctions implements IButtonFunctions\r\n{\r\n    private IBookDataHandler bookHandler;\r\n    private IUserDataHandler userHandler;\r\n    private final int IMAGE_HEIGHT = 120;\r\n\r\n    public ButtonFunctions()\r\n    {\r\n        bookHandler = new BookDataHandler();\r\n        userHandler = new UserDataHandler();\r\n    }\r\n\r\n    @Override\r\n    public void SearchButtonPressed(String keyword, TableLayout table, Context context, MainActivity main, String order, String searchBy) throws ClassNotFoundException {\r\n        ClearResults(table);\r\n\r\n        if (keyword.equals(\"\")) main.FillTrendingTable();\r\n        else PopulateResults(bookHandler.findBooks(keyword), table, context, main);\r\n    }\r\n\r\n    private void ClearResults(TableLayout table) {\r\n        table.removeAllViews();\r\n    }\r\n\r\n    private List<IBook> PopulateResults(List<IBook> results, TableLayout table, Context context, MainActivity main) {\r\n        if (results != null) {\r\n            for (IBook book : results) {\r\n                TableRow row = CreateTableRow(context);\r\n\r\n                row.addView(CreateImageView(context, book, ScreenSize.getPixelsFromDP(context, IMAGE_HEIGHT)));\r\n                row.addView(CreateTextView(context, book));\r\n                row.setOnClickListener(v -> OpenBookDetailsActivity(context, book, main));\r\n\r\n                table.addView(row);\r\n            }\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    private void OpenBookDetailsActivity(Context context, IBook book, MainActivity main) {\r\n        Intent intent = new Intent(context, BookDetailsActivity.class);\r\n        BookDataHandler.currentBook = book;\r\n        main.startActivity(intent);\r\n    }\r\n\r\n    private TableRow CreateTableRow(Context context) {\r\n        TableRow row = new TableRow(context);\r\n        row.setPadding(10,10,10,10);\r\n        return row;\r\n    }\r\n\r\n    @SuppressLint(\"SetTextI18n\")\r\n    private TextView CreateTextView(Context context, IBook book) {\r\n        TextView text = new TextView(context);\r\n\r\n        float price = book.getPrice() / 100f;\r\n        DecimalFormat df = new DecimalFormat();\r\n        df.setMaximumFractionDigits(2);\r\n        df.setMinimumFractionDigits(2);\r\n\r\n        text.setText(book.getBookName() + \"\\n\" + book.getBookAuthor() + \"\\n\" + book.getBookIsbn() + \"\\n\\n$\" + df.format(price));\r\n\r\n        return text;\r\n    }\r\n\r\n    private ImageView CreateImageView(Context context, IBook book, int height) {\r\n        ImageView image = new ImageView(context);\r\n        image.setImageResource(book.getImage());\r\n        image.setLayoutParams(new TableRow.LayoutParams(height, height));\r\n        return image;\r\n    }\r\n\r\n    @Override\r\n    public void LoginButtonPressed(String email, String password) throws ClassNotFoundException {\r\n        userHandler.logIn(email, password);\r\n    }\r\n\r\n    @Override\r\n    public void SwitchToLoginActivity(MainActivity main, Context context)\r\n    {\r\n        Intent intent = new Intent(context, LoginActivity.class);\r\n        main.startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void LogoutButtonPressed()\r\n    {\r\n        userHandler.logOut();\r\n    }\r\n\r\n\r\n    @Override\r\n    public void ChangePasswordPressed(String oldPw, String newPw, String confirmNewPw)\r\n    {\r\n        userHandler.changePassword(oldPw, newPw, confirmNewPw);\r\n    }\r\n\r\n    @Override\r\n    public void UserSettingButtonPressed(Context context, MainActivity main) {\r\n        Intent intent = new Intent(context, UserSettingActivity.class);\r\n        main.startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void IncrementStock(TextView text)\r\n    {\r\n        IBookDetailsFunctions bookDetailsFunctions = new BookDetailsFunctions();\r\n\r\n        bookHandler.incrementStock(BookDataHandler.currentBook);\r\n        bookDetailsFunctions.UpdateBookDetails(text);\r\n    }\r\n\r\n    @Override\r\n    public void DecrementStock(TextView text)\r\n    {\r\n        IBookDetailsFunctions bookDetailsFunctions = new BookDetailsFunctions();\r\n\r\n        bookHandler.decrementStock(BookDataHandler.currentBook);\r\n        bookDetailsFunctions.UpdateBookDetails(text);\r\n    }\r\n\r\n    @Override\r\n    public void SetStock()\r\n    {\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/business/UI_Handler/ButtonFunctions.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/business/UI_Handler/ButtonFunctions.java	(date 1616547030605)
@@ -28,9 +28,9 @@
     private IUserDataHandler userHandler;
     private final int IMAGE_HEIGHT = 120;
 
-    public ButtonFunctions()
+    public ButtonFunctions(Context context)
     {
-        bookHandler = new BookDataHandler();
+        bookHandler = new BookDataHandler(context);
         userHandler = new UserDataHandler();
     }
 
Index: app/src/main/java/com/comp3350_group10/bookstore/presentation/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.presentation;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.TableLayout;\r\nimport com.comp3350_group10.bookstore.R;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport com.comp3350_group10.bookstore.application.Main;\r\nimport com.comp3350_group10.bookstore.application.Service;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.ButtonFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.IButtonFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.TrendingPageFunctions;\r\n\r\npublic class MainActivity extends AppCompatActivity\r\n{\r\n    private IButtonFunctions uIButtonFunctions;\r\n    private TableLayout bookListTable;\r\n    private EditText searchBar;\r\n    private Spinner dropdown;\r\n    private Button sortButton;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        Main.setDBPath(\"./assets/db/book.script\");\r\n        Service.setupBookDatabase();\r\n        uIButtonFunctions = new ButtonFunctions();\r\n        searchBar = findViewById(R.id.searchBar);\r\n        bookListTable = findViewById(R.id.bookListTable);\r\n        dropdown = findViewById(R.id.dropdown);\r\n        sortButton = findViewById(R.id.sortingButton);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n\r\n        setSupportActionBar(toolbar);\r\n\r\n        SetSearchListener(getBaseContext(), this);\r\n        try {\r\n            FillTrendingTable();\r\n        } catch (ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        FillDropdownList();\r\n    }\r\n\r\n    private void FillDropdownList() {\r\n        String[] items = new String[] {\"By Title\", \"By Author\", \"By Genre\"};\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, R.layout.support_simple_spinner_dropdown_item, items);\r\n        dropdown.setAdapter(adapter);\r\n    }\r\n\r\n    public void FillTrendingTable() throws ClassNotFoundException {\r\n        TrendingPageFunctions.FillTrendingPage(bookListTable, this);\r\n    }\r\n\r\n    private void SetSearchListener(Context context, MainActivity main) {\r\n        searchBar.addTextChangedListener(new TextWatcher() {\r\n            public void afterTextChanged(Editable s) { }\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) { }\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                try {\r\n                    uIButtonFunctions.SearchButtonPressed(s.toString(), bookListTable, context, main, sortButton.getText().toString(), (String)dropdown.getSelectedItem());\r\n                } catch (ClassNotFoundException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public boolean onCreateOptionsMenu(Menu menu) {\r\n        // Inflate the menu; this adds items to the action bar if it is present.\r\n        getMenuInflater().inflate(R.menu.main, menu);\r\n        return true;\r\n    }\r\n\r\n    public void onLoginButtonClicked(MenuItem item) {\r\n        uIButtonFunctions.SwitchToLoginActivity(this, getBaseContext());\r\n    }\r\n\r\n    public void onLogoutButtonClicked(MenuItem item)\r\n    {\r\n        uIButtonFunctions.LogoutButtonPressed();\r\n    }\r\n\r\n    public void userSettingButtonClicked(MenuItem item){ uIButtonFunctions.UserSettingButtonPressed(getBaseContext(), this); }\r\n\r\n    public void onSortButtonClicked(View v) {\r\n        Button b = (Button)v;\r\n        if (b.getText().toString().equals(\"DESC\"))\r\n            b.setText(\"ASC\");\r\n        else b.setText(\"DESC\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/presentation/MainActivity.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/presentation/MainActivity.java	(date 1616547045128)
@@ -35,9 +35,9 @@
     {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
-        Main.setDBPath("./assets/db/book.script");
-        Service.setupBookDatabase();
-        uIButtonFunctions = new ButtonFunctions();
+        //Main.setDBPath("./assets/db/book.script");
+        //Service.setupBookDatabase();
+        uIButtonFunctions = new ButtonFunctions(getBaseContext());
         searchBar = findViewById(R.id.searchBar);
         bookListTable = findViewById(R.id.bookListTable);
         dropdown = findViewById(R.id.dropdown);
Index: app/src/main/java/com/comp3350_group10/bookstore/application/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.application;\r\n\r\npublic class Main {\r\n    private static String dbName=\"BS\";\r\n\r\n    public static void setDBPath(final String name) {\r\n        try {\r\n            Class.forName(\"org.hsqldb.jdbc.JDBCDriver\").newInstance();\r\n        } catch (InstantiationException e) {\r\n            e.printStackTrace();\r\n        } catch (IllegalAccessException e) {\r\n            e.printStackTrace();\r\n        } catch (ClassNotFoundException e) {\r\n            e.printStackTrace();\r\n        }\r\n        dbName = name;\r\n    }\r\n\r\n    public static String getDBPath() {\r\n        return dbName;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/application/Main.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/application/Main.java	(date 1616547725204)
@@ -1,7 +1,7 @@
 package com.comp3350_group10.bookstore.application;
 
 public class Main {
-    private static String dbName="BS";
+    private static String dbName="file://android_asset/db/BS.script";
 
     public static void setDBPath(final String name) {
         try {
Index: app/src/main/java/com/comp3350_group10/bookstore/presentation/BookDetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.presentation;\r\n\r\nimport android.os.Bundle;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.BookDetailsFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.ButtonFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.IBookDetailsFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.IButtonFunctions;\r\nimport com.comp3350_group10.bookstore.R;\r\n\r\n\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.Toolbar;\r\n\r\nimport android.view.View;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\npublic class BookDetailsActivity extends AppCompatActivity {\r\n\r\n    //private final int IMAGE_HEIGHT = 110;\r\n    IBookDetailsFunctions bookDetailsFunctions;\r\n    IButtonFunctions buttonFunctions;\r\n    private TextView bookTitle;\r\n    private ImageView bookImage;\r\n    private TextView details;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_book_details);\r\n        Toolbar toolbar = findViewById(R.id.toolbar);\r\n        setSupportActionBar(toolbar);\r\n\r\n        bookTitle = findViewById(R.id.bookDetailsTitle);\r\n        bookImage = findViewById(R.id.bookDetailsImage);\r\n        details = findViewById(R.id.bookDetailsText);\r\n\r\n        buttonFunctions = new ButtonFunctions();\r\n        bookDetailsFunctions = new BookDetailsFunctions();\r\n        //bookDetailsFunctions.DrawScreen(this, 120, bookDetailsLayout);\r\n        bookDetailsFunctions.LoadBookInfo(bookTitle, bookImage, details);\r\n    }\r\n\r\n    public void OnSaleClick(View v) {\r\n        buttonFunctions.DecrementStock(details);\r\n    }\r\n\r\n    public void OnReturnClick(View v) {\r\n        buttonFunctions.IncrementStock(details);\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/presentation/BookDetailsActivity.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/presentation/BookDetailsActivity.java	(date 1616547065491)
@@ -36,7 +36,7 @@
         bookImage = findViewById(R.id.bookDetailsImage);
         details = findViewById(R.id.bookDetailsText);
 
-        buttonFunctions = new ButtonFunctions();
+        buttonFunctions = new ButtonFunctions(getBaseContext());
         bookDetailsFunctions = new BookDetailsFunctions();
         //bookDetailsFunctions.DrawScreen(this, 120, bookDetailsLayout);
         bookDetailsFunctions.LoadBookInfo(bookTitle, bookImage, details);
Index: app/src/main/java/com/comp3350_group10/bookstore/presentation/login/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.presentation.login;\r\n\r\nimport androidx.lifecycle.ViewModelProvider;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.text.Editable;\r\nimport android.text.TextWatcher;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport com.comp3350_group10.bookstore.R;\r\n\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.IUserDataHandler;\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.UserDataHandler;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.ButtonFunctions;\r\nimport com.comp3350_group10.bookstore.business.UI_Handler.IButtonFunctions;\r\n\r\npublic class LoginActivity extends AppCompatActivity\r\n{\r\n    IButtonFunctions buttonFunctions;\r\n\r\n    private LoginViewModel loginViewModel;\r\n    private EditText password;\r\n    private EditText email;\r\n    private Button loginButton;\r\n    public static TextView errorMessage;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState)\r\n    {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_login);\r\n        loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory())\r\n                .get(LoginViewModel.class);\r\n\r\n        buttonFunctions = new ButtonFunctions();\r\n        errorMessage = findViewById(R.id.loginErrorMessage);\r\n        password = findViewById(R.id.password);\r\n        email = findViewById(R.id.username);\r\n        loginButton = findViewById(R.id.loginButton);\r\n\r\n        AddTextChangedListeners();\r\n    }\r\n\r\n    private void AddTextChangedListeners() {\r\n        TextWatcher watcher = new TextWatcher() {\r\n            public void afterTextChanged(Editable s) { }\r\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) { }\r\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\r\n                EnableLoginButton();\r\n            }\r\n        };\r\n\r\n        password.addTextChangedListener(watcher);\r\n        email.addTextChangedListener(watcher);\r\n    }\r\n\r\n    private  void EnableLoginButton()\r\n    {\r\n        loginButton.setEnabled(!password.getText().toString().equals(\"\") && !email.getText().toString().equals(\"\"));\r\n    }\r\n\r\n    public void LoginOnClick(View v) throws ClassNotFoundException\r\n    {\r\n        buttonFunctions.LoginButtonPressed(this.email.toString(), this.password.toString());\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/presentation/login/LoginActivity.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/presentation/login/LoginActivity.java	(date 1616547073664)
@@ -38,7 +38,7 @@
         loginViewModel = new ViewModelProvider(this, new LoginViewModelFactory())
                 .get(LoginViewModel.class);
 
-        buttonFunctions = new ButtonFunctions();
+        buttonFunctions = new ButtonFunctions(getBaseContext());
         errorMessage = findViewById(R.id.loginErrorMessage);
         password = findViewById(R.id.password);
         email = findViewById(R.id.username);
Index: app/src/main/java/com/comp3350_group10/bookstore/business/Data_Handler/BookDataHandler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.business.Data_Handler;\r\n\r\nimport android.os.Build;\r\n\r\nimport androidx.annotation.RequiresApi;\r\n\r\n\r\nimport com.comp3350_group10.bookstore.application.Main;\r\nimport com.comp3350_group10.bookstore.application.Service;\r\nimport com.comp3350_group10.bookstore.persistence.IUserDatabase;\r\nimport com.comp3350_group10.bookstore.persistence.hsqldb.BookDatabase;\r\nimport com.comp3350_group10.bookstore.persistence.IBook;\r\nimport com.comp3350_group10.bookstore.persistence.IBookDatabase;\r\nimport com.comp3350_group10.bookstore.objects.User;\r\nimport com.comp3350_group10.bookstore.persistence.hsqldb.UserDatabase;\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map.Entry;\r\n\r\n\r\npublic class BookDataHandler implements IBookDataHandler {\r\n//    private IUserDatabase userDatabase = new UserDatabase(Main.getDBPath());\r\n    private IBookDatabase bookDatabase = new BookDatabase(Main.getDBPath());    //TODO: constructor expecting path\r\n    public static IBook currentBook;\r\n\r\n    public BookDataHandler(){\r\n        bookDatabase = Service.setupBookDatabase();\r\n    }\r\n\r\n    //Takes the keyword and search database with it\r\n    //Returns result after removing duplicated results, and sorted by relevance\r\n    /*\r\n     * param keyword\r\n     * return list of found books\r\n     * */\r\n    @RequiresApi(api = Build.VERSION_CODES.N)\r\n    public List<IBook> findBooks(String keyword) throws ClassNotFoundException {\r\n        List<String> wordList = splitWords(keyword); //splits keywords\r\n\r\n        List<IBook> bookList = new ArrayList<>();   //stores search result\r\n\r\n        //search database with each keyword and combining the lists\r\n        for(String word: wordList){\r\n            bookList.addAll(bookDatabase.findBook(word));\r\n        }\r\n\r\n        //sort the booklist by relevancy (times it appeared in search result) and remove duplication\r\n        bookList = sortByRelevancy(bookList);\r\n\r\n        return bookList;\r\n    }\r\n\r\n    //function to set the target book to the given price\r\n    public void setPrice(IBook target, int price){\r\n        //make sure target is initialized\r\n        try\r\n        {\r\n            //price cannot be negative\r\n            if(price>=0){\r\n                target.setPrice(price);\r\n            }\r\n            else{\r\n                System.out.println(\"The price cannot be set to negative number\");\r\n            }\r\n            bookDatabase.updateBook(target);\r\n        }\r\n\r\n        catch(NullPointerException | ClassNotFoundException e)\r\n        {\r\n            System.out.println(e+\"caught in UserDataHandler.java method - setPrice()\");\r\n        }\r\n    }\r\n\r\n\r\n    //function to increment the price by 1\r\n    public void incrementPrice(IBook target) {\r\n        try {\r\n            setPrice(target, target.getPrice() + 1);\r\n        } catch (NullPointerException e) {\r\n            System.out.println(e + \"caught in UserDataHandler.java method - incrementPrice()\");\r\n        }\r\n    }\r\n\r\n    //function to decrement price by 1\r\n    public void decrementPrice(IBook target){\r\n        try{\r\n            setPrice(target, target.getPrice()-1);\r\n        }\r\n        catch (NullPointerException e) {\r\n            System.out.println(e + \"caught in UserDataHandler.java method - decrementPrice()\");\r\n        }\r\n\r\n    }\r\n\r\n\r\n    //function set the stock for the target book with the given quantity\r\n    public void setStock(IBook target, int quantity) throws ClassNotFoundException {\r\n        //make sure target is initialized\r\n        try{\r\n            //stock cannot be negative\r\n            if(quantity >= 0){\r\n                target.setStock(quantity);\r\n            }\r\n            else{\r\n                System.out.println(\"The stock cannot be set to negative number\");\r\n            }\r\n            bookDatabase.updateBook(target);\r\n        }\r\n        catch(NullPointerException e)\r\n        {\r\n            System.out.println(e+\"caught in UserDataHandler.java method - setStock()\");\r\n        }\r\n    }\r\n\r\n\r\n    //function to increment the stock by 1\r\n    public void incrementStock(IBook target) {\r\n        //make sure target is initialized\r\n        try {\r\n            setStock(target, target.getStock() + 1);\r\n        }\r\n        catch (NullPointerException | ClassNotFoundException e) {\r\n            System.out.println(e + \"caught in UserDataHandler.java method - incrementStock()\");\r\n        }\r\n    }\r\n\r\n\r\n    //function to decrement the stock by 1\r\n    public void decrementStock(IBook target){\r\n        //Make sure target is initialized and do not decrease if stock is less than 0\r\n        try {\r\n            setStock(target, target.getStock() - 1);\r\n        }\r\n        catch (NullPointerException | ClassNotFoundException e) {\r\n            System.out.println(e + \"caught in DataHandler.java method - decrementStock()\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //Takes a list of books with duplication, the more duplicated the book the\r\n    //Sort the given list of books by how many words in its title matches with the given word list\r\n    //And gets rid of the duplicated elements\r\n    @RequiresApi(api = Build.VERSION_CODES.N)\r\n    private List<IBook> sortByRelevancy(List<IBook> bookList){\r\n        //relevancy is determined by # of times the book appeared in search result\r\n        //<Key : Value> = <IBook book : Integer relevancy>\r\n        HashMap<IBook,Integer> map = new HashMap<>();\r\n        for (IBook book : bookList) {\r\n            if (!map.containsKey(book)) {\r\n                map.put(book, 1);\r\n            }\r\n            else{\r\n                map.put(book, map.get(book)+1);\r\n                //TODO: Warning:(195, 31) Unboxing of 'map.get(book)' may produce 'NullPointerException'\r\n            }\r\n        }\r\n\r\n        //descending sort by relevancy\r\n        List<Entry<IBook, Integer>> sortedBookList = new ArrayList<>(map.entrySet());\r\n        sortedBookList.sort(Entry.<IBook, Integer>comparingByValue().reversed());\r\n\r\n        //copies the sorted list to list of books to return\r\n        List<IBook> result = new ArrayList<>();\r\n        for(Entry<IBook, Integer> entries: sortedBookList){\r\n            result.add(entries.getKey());\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n    // splits the given string, ignores non-ascii words\r\n    private List<String> splitWords(String words){\r\n        //split input\r\n        String[] split = words.toLowerCase().split(\"[-. ,:]+\");\r\n\r\n        //initialize returning list\r\n        List<String> result = new ArrayList<>();\r\n\r\n        //ignore non-ascii and common words\r\n        for(String word:split) {\r\n            if(word.matches(\"\\\\A\\\\p{ASCII}*\\\\z\")){\r\n                result.add(word);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n\r\n\r\n\r\n    // TODO: Take care of IUserDatabase bugs after it's implemented\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/business/Data_Handler/BookDataHandler.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/business/Data_Handler/BookDataHandler.java	(date 1616546612399)
@@ -1,5 +1,6 @@
 package com.comp3350_group10.bookstore.business.Data_Handler;
 
+import android.content.Context;
 import android.os.Build;
 
 import androidx.annotation.RequiresApi;
@@ -23,11 +24,11 @@
 
 public class BookDataHandler implements IBookDataHandler {
 //    private IUserDatabase userDatabase = new UserDatabase(Main.getDBPath());
-    private IBookDatabase bookDatabase = new BookDatabase(Main.getDBPath());    //TODO: constructor expecting path
+    private IBookDatabase bookDatabase;// = new BookDatabase("", );    //TODO: constructor expecting path
     public static IBook currentBook;
 
-    public BookDataHandler(){
-        bookDatabase = Service.setupBookDatabase();
+    public BookDataHandler(Context context){
+        bookDatabase = Service.setupBookDatabase(context);
     }
 
     //Takes the keyword and search database with it
Index: app/src/main/java/com/comp3350_group10/bookstore/business/UI_Handler/TrendingPageFunctions.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.business.UI_Handler;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.widget.HorizontalScrollView;\r\nimport android.widget.ImageView;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.Space;\r\nimport android.widget.TableLayout;\r\nimport android.widget.TableRow;\r\nimport android.widget.TextView;\r\nimport com.comp3350_group10.bookstore.R;\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.BookDataHandler;\r\nimport com.comp3350_group10.bookstore.business.Data_Handler.IBookDataHandler;\r\nimport com.comp3350_group10.bookstore.persistence.IBook;\r\nimport com.comp3350_group10.bookstore.presentation.BookDetailsActivity;\r\nimport com.comp3350_group10.bookstore.presentation.ScreenSize;\r\n\r\nimport java.util.List;\r\n\r\npublic class TrendingPageFunctions {\r\n    private static int imageHeight = 0;\r\n    private static int spacerHeight = 0;\r\n    private static int dividerHeight = 0;\r\n\r\n    public static void FillTrendingPage(TableLayout table, Context context) throws ClassNotFoundException {\r\n        setHeights(context);\r\n        AddSpacer(context, table);\r\n        AddTrendingRow(table, context, \"By Stephanie Meyer\", \"Stephenie Meyer\");\r\n        AddTrendingRow(table, context, \"Harry Potter series\", \"Harry Potter\");\r\n        AddTrendingRow(table, context, \"By Jeff Kinney\", \"Jeff Kinney\");\r\n        AddTrendingRow(table, context, \"The Lord of the Rings\", \"Lord\");\r\n        AddTrendingRow(table, context, \"By J. R. R. Tolkien\", \"Tolkien\");\r\n    }\r\n\r\n    private static void setHeights(Context context) {\r\n        imageHeight = ScreenSize.getPixelsFromDP(context, 120);\r\n        spacerHeight = ScreenSize.getPixelsFromDP(context, 10);\r\n        dividerHeight = ScreenSize.getPixelsFromDP(context, 3);\r\n    }\r\n\r\n    private static void AddTrendingRow(TableLayout table, Context context, String categoryName, String searchTerm) throws ClassNotFoundException {\r\n        AddCategoryName(table, context, categoryName);\r\n        AddSpacer(context, table);\r\n        AddRowContent(table, context, searchTerm);\r\n        AddDivider(context, table);\r\n    }\r\n\r\n    private static void AddSpacer(Context context, TableLayout table) {\r\n        Space space = new Space(context);\r\n        space.setLayoutParams(new LinearLayout.LayoutParams(spacerHeight, spacerHeight));\r\n        //TODO: Warning:(50, 61) 'spacerHeight' should probably not be passed as parameter 'width'\r\n        table.addView(space);\r\n    }\r\n\r\n    private static void AddDivider(Context context, TableLayout table) {\r\n        AddSpacer(context, table);\r\n        ImageView image = new ImageView(context);\r\n        image.setLayoutParams(new TableRow.LayoutParams(dividerHeight, dividerHeight));\r\n        image.setImageResource(R.drawable.divider);\r\n        table.addView(image);\r\n        AddSpacer(context, table);\r\n    }\r\n\r\n    private static void AddCategoryName(TableLayout table, Context context, String categoryName) {\r\n        TableRow row = new TableRow(context);\r\n        TextView categoryText = new TextView(context);\r\n        categoryText.setText(categoryName);\r\n        categoryText.setPadding(30,0,0,0);\r\n        row.addView(categoryText);\r\n        table.addView(row);\r\n    }\r\n\r\n    private static void AddRowContent(TableLayout table, Context context, String searchTerm) throws ClassNotFoundException {\r\n        TableRow row = new TableRow(context);\r\n        HorizontalScrollView scrollView = new HorizontalScrollView(context);\r\n        LinearLayout layout = new LinearLayout(context);\r\n\r\n        scrollView.addView(layout);\r\n        row.addView(scrollView);\r\n        table.addView(row);\r\n\r\n        AddImagesToRow(context, layout, searchTerm);\r\n\r\n        scrollView.getLayoutParams().width = LinearLayout.LayoutParams.WRAP_CONTENT;\r\n    }\r\n\r\n    private static void AddImagesToRow(Context context, LinearLayout layout, String searchTerm) throws ClassNotFoundException {\r\n        IBookDataHandler bookHandler = new BookDataHandler();\r\n        List<IBook> books = bookHandler.findBooks(searchTerm);\r\n\r\n        for (IBook book : books) {\r\n            ImageView image = new ImageView(context);\r\n            image.setClickable(true);\r\n            image.setLayoutParams(new TableRow.LayoutParams(imageHeight, imageHeight));\r\n            image.setImageResource(book.getImage());\r\n            layout.addView(image);\r\n\r\n            image.setOnClickListener(v -> {\r\n                BookDataHandler.currentBook = book;\r\n                SwitchToBookDetailsActivity(context);\r\n            });\r\n        }\r\n    }\r\n\r\n    private static void SwitchToBookDetailsActivity(Context context) {\r\n        Intent intent = new Intent(context, BookDetailsActivity.class);\r\n        context.startActivity(intent);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/business/UI_Handler/TrendingPageFunctions.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/business/UI_Handler/TrendingPageFunctions.java	(date 1616546337481)
@@ -86,7 +86,7 @@
     }
 
     private static void AddImagesToRow(Context context, LinearLayout layout, String searchTerm) throws ClassNotFoundException {
-        IBookDataHandler bookHandler = new BookDataHandler();
+        IBookDataHandler bookHandler = new BookDataHandler(context);
         List<IBook> books = bookHandler.findBooks(searchTerm);
 
         for (IBook book : books) {
Index: .idea/modules/app/BookStore.app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<module external.linked.project.id=\":app\" external.linked.project.path=\"$MODULE_DIR$/../../../app\" external.root.project.path=\"$MODULE_DIR$/../../..\" external.system.id=\"GRADLE\" external.system.module.group=\"BookStore\" external.system.module.version=\"unspecified\" type=\"JAVA_MODULE\" version=\"4\">\r\n  <component name=\"FacetManager\">\r\n    <facet type=\"android-gradle\" name=\"Android-Gradle\">\r\n      <configuration>\r\n        <option name=\"GRADLE_PROJECT_PATH\" value=\":app\" />\r\n        <option name=\"LAST_SUCCESSFUL_SYNC_AGP_VERSION\" value=\"4.1.2\" />\r\n        <option name=\"LAST_KNOWN_AGP_VERSION\" value=\"4.1.2\" />\r\n      </configuration>\r\n    </facet>\r\n    <facet type=\"android\" name=\"Android\">\r\n      <configuration>\r\n        <option name=\"SELECTED_BUILD_VARIANT\" value=\"debug\" />\r\n        <option name=\"ASSEMBLE_TASK_NAME\" value=\"assembleDebug\" />\r\n        <option name=\"COMPILE_JAVA_TASK_NAME\" value=\"compileDebugSources\" />\r\n        <afterSyncTasks>\r\n          <task>generateDebugSources</task>\r\n        </afterSyncTasks>\r\n        <option name=\"ALLOW_USER_CONFIGURATION\" value=\"false\" />\r\n        <option name=\"MANIFEST_FILE_RELATIVE_PATH\" value=\"/src/main/AndroidManifest.xml\" />\r\n        <option name=\"RES_FOLDER_RELATIVE_PATH\" value=\"/src/main/res\" />\r\n        <option name=\"RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/main/res;file://$MODULE_DIR$/../../../app/src/debug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/debug\" />\r\n        <option name=\"TEST_RES_FOLDERS_RELATIVE_PATH\" value=\"file://$MODULE_DIR$/../../../app/src/androidTest/res;file://$MODULE_DIR$/../../../app/src/androidTestDebug/res;file://$MODULE_DIR$/../../../app/build/generated/res/rs/androidTest/debug;file://$MODULE_DIR$/../../../app/build/generated/res/resValues/androidTest/debug\" />\r\n        <option name=\"ASSETS_FOLDER_RELATIVE_PATH\" value=\"/src/main/assets\" />\r\n      </configuration>\r\n    </facet>\r\n  </component>\r\n  <component name=\"NewModuleRootManager\" LANGUAGE_LEVEL=\"JDK_1_8\">\r\n    <output url=\"file://$MODULE_DIR$/../../../app/build/intermediates/javac/debug/classes\" />\r\n    <output-test url=\"file://$MODULE_DIR$/../../../app/build/intermediates/javac/debugUnitTest/classes\" />\r\n    <exclude-output />\r\n    <content url=\"file://$MODULE_DIR$/../../../app\">\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/java\" isTestSource=\"false\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/androidTest/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/test/java\" isTestSource=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug\" isTestSource=\"false\" generated=\"true\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/assets\" type=\"java-resource\" />\r\n      <sourceFolder url=\"file://$MODULE_DIR$/../../../app/src/main/res\" type=\"java-resource\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../../app/.gradle\" />\r\n      <excludeFolder url=\"file://$MODULE_DIR$/../../../app/build\" />\r\n    </content>\r\n    <orderEntry type=\"jdk\" jdkName=\"Android API 30 Platform\" jdkType=\"Android SDK\" />\r\n    <orderEntry type=\"sourceFolder\" forTests=\"false\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: junit:junit:4.12\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-integration:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-library:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: org.hamcrest:hamcrest-core:1.3\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.squareup:javawriter:2.1.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: javax.inject:javax.inject:1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: com.google.code.findbugs:jsr305:2.0.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.ext:junit:1.1.2@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.espresso:espresso-core:3.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:runner:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:core:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test:monitor:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.transition:transition:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: androidx.test.espresso:espresso-idling-resource:3.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" scope=\"TEST\" name=\"Gradle: junit:junit:4.13.2\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: ./app/libs/hsqldb.jar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.collection:collection:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-common:2.3.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.arch.core:core-common:2.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.annotation:annotation:1.1.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.constraintlayout:constraintlayout-solver:2.0.4\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.4.1\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-stdlib:1.4.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains.kotlin:kotlin-stdlib-common:1.4.20\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: org.jetbrains:annotations:13.0\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.navigation:navigation-ui:2.3.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: com.google.android.material:material:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.constraintlayout:constraintlayout:2.0.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.preference:preference:1.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.appcompat:appcompat:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.navigation:navigation-fragment:2.3.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.viewpager2:viewpager2:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.fragment:fragment:1.2.4@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.appcompat:appcompat-resources:1.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.drawerlayout:drawerlayout:1.1.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.coordinatorlayout:coordinatorlayout:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.dynamicanimation:dynamicanimation:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.recyclerview:recyclerview:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.transition:transition:1.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.vectordrawable:vectordrawable-animated:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.vectordrawable:vectordrawable:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.viewpager:viewpager:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.customview:customview:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.legacy:legacy-support-core-utils:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.loader:loader:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.navigation:navigation-runtime:2.3.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.activity:activity:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.core:core:1.3.1@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.cursoradapter:cursoradapter:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.cardview:cardview:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-runtime:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel-savedstate:2.2.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-viewmodel:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.versionedparcelable:versionedparcelable:1.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-ktx:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-core-ktx:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.lifecycle:lifecycle-livedata-core:2.3.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.savedstate:savedstate:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.arch.core:core-runtime:2.1.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.navigation:navigation-common:2.3.3@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.interpolator:interpolator:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.documentfile:documentfile:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.localbroadcastmanager:localbroadcastmanager:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.print:print:1.0.0@aar\" level=\"project\" />\r\n    <orderEntry type=\"library\" name=\"Gradle: androidx.annotation:annotation-experimental:1.0.0@aar\" level=\"project\" />\r\n  </component>\r\n</module>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/modules/app/BookStore.app.iml	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ .idea/modules/app/BookStore.app.iml	(date 1616542991618)
@@ -37,6 +37,8 @@
       <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
       <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/assets" type="java-resource" />
       <sourceFolder url="file://$MODULE_DIR$/../../../app/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/ap_generated_sources/debug/out" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/../../../app/build/generated/source/buildConfig/debug" isTestSource="false" />
       <excludeFolder url="file://$MODULE_DIR$/../../../app/.gradle" />
       <excludeFolder url="file://$MODULE_DIR$/../../../app/build" />
     </content>
Index: app/src/main/java/com/comp3350_group10/bookstore/application/Service.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.comp3350_group10.bookstore.application;\r\n\r\nimport com.comp3350_group10.bookstore.persistence.IBookDatabase;\r\nimport com.comp3350_group10.bookstore.persistence.IUserDatabase;\r\nimport com.comp3350_group10.bookstore.persistence.hsqldb.BookDatabase;\r\nimport com.comp3350_group10.bookstore.persistence.hsqldb.UserDatabase;\r\n\r\npublic class Service {\r\n    private static boolean bookHsqlActivated = false;\r\n    private static boolean userHsqlActivated = false;\r\n\r\n    private static IBookDatabase bookPersistance = null;\r\n    private static IUserDatabase userPersistance = null;\r\n\r\n    public static synchronized IBookDatabase setupBookDatabase(){\r\n        //if not activated the database, we will instantiate that\r\n        if(bookHsqlActivated==false){\r\n            bookPersistance = new BookDatabase(Main.getDBPath());\r\n            bookHsqlActivated=true;\r\n        }\r\n        return bookPersistance;\r\n    }\r\n\r\n    public static synchronized IUserDatabase setupUserDatabase(){\r\n        if(userHsqlActivated==false){\r\n            userPersistance = new UserDatabase(Main.getDBPath());\r\n            userHsqlActivated=true;\r\n        }\r\n        return userPersistance;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/comp3350_group10/bookstore/application/Service.java	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/src/main/java/com/comp3350_group10/bookstore/application/Service.java	(date 1616546337487)
@@ -1,5 +1,7 @@
 package com.comp3350_group10.bookstore.application;
 
+import android.content.Context;
+
 import com.comp3350_group10.bookstore.persistence.IBookDatabase;
 import com.comp3350_group10.bookstore.persistence.IUserDatabase;
 import com.comp3350_group10.bookstore.persistence.hsqldb.BookDatabase;
@@ -12,10 +14,10 @@
     private static IBookDatabase bookPersistance = null;
     private static IUserDatabase userPersistance = null;
 
-    public static synchronized IBookDatabase setupBookDatabase(){
+    public static synchronized IBookDatabase setupBookDatabase(Context context) {
         //if not activated the database, we will instantiate that
         if(bookHsqlActivated==false){
-            bookPersistance = new BookDatabase(Main.getDBPath());
+            bookPersistance = new BookDatabase(Main.getDBPath(), context);
             bookHsqlActivated=true;
         }
         return bookPersistance;
Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.0\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.comp3350_group10.bookstore\"\r\n        minSdkVersion 23\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'\r\n    implementation 'androidx.navigation:navigation-fragment:2.3.3'\r\n    implementation 'androidx.navigation:navigation-ui:2.3.3'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'\r\n    implementation 'androidx.annotation:annotation:1.1.0'\r\n    implementation 'androidx.preference:preference:1.1.1'\r\n    testImplementation 'junit:junit:4.+'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n    compile fileTree(dir: 'libs', include: ['*.jar'])\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ app/build.gradle	(date 1616547130142)
@@ -42,5 +42,5 @@
     testImplementation 'junit:junit:4.+'
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
-    compile fileTree(dir: 'libs', include: ['*.jar'])
+    implementation fileTree(dir: 'libs', include: ['*.jar'])
 }
\ No newline at end of file
Index: local.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## This file must *NOT* be checked into Version Control Systems,\r\n# as it contains information specific to your local configuration.\r\n#\r\n# Location of the SDK. This is only used by Gradle.\r\n# For customization when using a Version Control System, please read the\r\n# header note.\r\n#Thu Mar 18 16:05:35 CDT 2021\r\nsdk.dir=C\\:\\\\Users\\\\bhale\\\\AppData\\\\Local\\\\Android\\\\Sdk\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>windows-1252
===================================================================
--- local.properties	(revision be261dcd3bb472acc9cd289e5dd6c0fe6ee211cb)
+++ local.properties	(date 1616542920054)
@@ -4,5 +4,5 @@
 # Location of the SDK. This is only used by Gradle.
 # For customization when using a Version Control System, please read the
 # header note.
-#Thu Mar 18 16:05:35 CDT 2021
-sdk.dir=C\:\\Users\\bhale\\AppData\\Local\\Android\\Sdk
+#Tue Mar 23 18:42:00 CDT 2021
+sdk.dir=C\:\\Users\\zorks\\AppData\\Local\\Android\\Sdk
